<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Alex Chen's Blog]]></title>
  <link href="http://terratakashi.github.io/atom.xml" rel="self"/>
  <link href="http://terratakashi.github.io/"/>
  <updated>2013-08-01T02:08:09+08:00</updated>
  <id>http://terratakashi.github.io/</id>
  <author>
    <name><![CDATA[Alex Chen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to convert original text document into web page content]]></title>
    <link href="http://terratakashi.github.io/blog/2013/07/26/how-to-convert-original-text-document-into-web-page-content/"/>
    <updated>2013-07-26T15:49:00+08:00</updated>
    <id>http://terratakashi.github.io/blog/2013/07/26/how-to-convert-original-text-document-into-web-page-content</id>
    <content type="html"><![CDATA[<pre><code>Today I'm dealing with the lot's of txt files which I have already push them into the database.  However, I used text field in database and original text document type which means the content of document will be stored like a quite long string, and contain lot's of line changinge character(`\n`).
</code></pre>

<p>At first, I simply only treat them like instance variable, so I got a terrible result which looked like everything screw up together.  After a while, I found out line changing characters(<code>\n</code>) didn&rsquo;t appear at right place.</p>

<p>My document:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>裁判字號:101,審訴緝,31
</span><span class='line'>裁判日期:1010719
</span><span class='line'>裁判案由:妨害兵役
</span><span class='line'>裁判全文:
</span><span class='line'>臺灣臺北地方法院刑事判決　　　　　 101年度審訴緝字第31號
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>My code is like this:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="o">&lt;%=</span> <span class="vi">@document</span><span class="o">.</span><span class="n">content</span> <span class="o">%&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>And the terrible result:
<img src="https://s3.amazonaws.com/logdown-production/user/2007/blog/2009/post/65216/97AQnV4SRyzRECrS4pLz_Drlaw" alt="Drlaw" /></p>

<p>Then I survey the related documents on Internet, and there are two solutions to solve that.  One of that is using the HTML tag <code>&lt;pre&gt;</code> to keep the original format, and the other one is using rails method <code>simple_format</code> to do the same effect.</p>

<p>Here is the result and source HTML of using <code>&lt;pre&gt;</code>:
<img src="https://s3.amazonaws.com/logdown-production/user/2007/blog/2009/post/65216/3zvZQJfRSq6y891l2qj8_Drlaw" alt="Drlaw" />
<img src="https://s3.amazonaws.com/logdown-production/user/2007/blog/2009/post/65216/dDNhullWTtW7UOzgkjth_view-source:localhost:3000/tasks/22745" alt="view-source:localhost:3000/tasks/22745" /></p>

<p>And here is the result and source HTML of using rails method <code>simple_format</code>:
<img src="https://s3.amazonaws.com/logdown-production/user/2007/blog/2009/post/65216/sKsedsCQYChiwi0VIrfH_Drlaw" alt="Drlaw" />
<img src="https://s3.amazonaws.com/logdown-production/user/2007/blog/2009/post/65216/hJcAa94mS72IXHHcf5vI_view-source:localhost:3000/tasks/22745" alt="view-source:localhost:3000/tasks/22745" /></p>

<p>Do you find the difference between them?  The most important difference is that their HTML format are totally different.  The HTML tag <code>&lt;pre&gt;</code> present the same way with txt file, and <code>simple_format</code> replace all <code>\n</code> to <code>&lt;br&gt;</code>.  In my opinion, I recommand the rails method <code>simple_format</code> which is more flexible than only using <code>&lt;pre&gt;</code> tag.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fetch Data From Broken Page]]></title>
    <link href="http://terratakashi.github.io/blog/2013/07/20/fetch-data-from-broken-page/"/>
    <updated>2013-07-20T01:13:00+08:00</updated>
    <id>http://terratakashi.github.io/blog/2013/07/20/fetch-data-from-broken-page</id>
    <content type="html"><![CDATA[<p>This was happening to me yesterday.  I tried to fetch some strings from ancient static pages which were made by frontpage before 10 years ago.</p>

<p>The old page may look like this:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'> 
</span><span class='line'>  <span class="nt">&lt;html&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;head&gt;</span>
</span><span class='line'>  <span class="nt">&lt;meta</span> <span class="na">http-equiv=</span><span class="s">&quot;Content-Type&quot;</span> <span class="na">content=</span><span class="s">&quot;text/html; charset=big5&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;GENERATOR&quot;</span> <span class="na">content=</span><span class="s">&quot;Microsoft FrontPage 5.0&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">&quot;ProgId&quot;</span> <span class="na">content=</span><span class="s">&quot;FrontPage.Editor.Document&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;title&gt;</span>比利時粗毛獵犬<span class="nt">&lt;/title&gt;</span>
</span><span class='line'>  <span class="nt">&lt;/head&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;body</span> <span class="na">bgcolor=</span><span class="s">&quot;#FFCC99&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;p</span> <span class="na">align=</span><span class="s">&quot;center&quot;</span><span class="nt">&gt;&lt;img</span> <span class="na">border=</span><span class="s">&quot;0&quot;</span> <span class="na">src=</span><span class="s">&quot;74-1.jpg&quot;</span> <span class="na">width=</span><span class="s">&quot;327&quot;</span> <span class="na">height=</span><span class="s">&quot;432&quot;</span><span class="nt">&gt;&lt;/p&gt;</span>
</span><span class='line'>  <span class="nt">&lt;p</span> <span class="na">align=</span><span class="s">&quot;center&quot;</span><span class="nt">&gt;&lt;font</span> <span class="na">color=</span><span class="s">&quot;#0000FF&quot;</span> <span class="na">face=</span><span class="s">&quot;正謙重圓黑框字形&quot;</span> <span class="na">size=</span><span class="s">&quot;7&quot;</span><span class="nt">&gt;</span>比利時粗毛獵犬<span class="nt">&lt;/font&gt;</span>
</span><span class='line'>
</span><span class='line'>  <span class="nt">&lt;p</span> <span class="na">align=</span><span class="s">&quot;center&quot;</span><span class="nt">&gt;&lt;b&gt;</span>
</span><span class='line'>  <span class="nt">&lt;span</span> <span class="na">lang=</span><span class="s">&quot;EN-US&quot;</span> <span class="na">style=</span><span class="s">&quot;font-size: 16pt; color: teal; font-family: 標楷體; background: yellow&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">style=</span><span class="s">&quot;color: blue; text-decoration: underline&quot;</span> <span class="na">href=</span><span class="s">&quot;http://www.abcd.com/NEW_PAGE_14.HTM&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  犬種圖鑑百科<span class="nt">&lt;/a&gt;&lt;/span&gt;&lt;span</span> <span class="na">lang=</span><span class="s">&quot;EN-US&quot;</span> <span class="na">style=</span><span class="s">&quot;FONT-SIZE: 16pt; COLOR: teal; FONT-FAMILY: 標楷體&quot;</span><span class="nt">&gt;</span><span class="ni">&amp;nbsp;</span>
</span><span class='line'>  <span class="nt">&lt;/span&gt;</span>
</span><span class='line'>  <span class="nt">&lt;span</span> <span class="na">lang=</span><span class="s">&quot;EN-US&quot;</span> <span class="na">style=</span><span class="s">&quot;font-size: 16pt; color: blue; font-family: 標楷體; background: yellow&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">style=</span><span class="s">&quot;color: blue; text-decoration: underline&quot;</span> <span class="na">href=</span><span class="s">&quot;http://www.abcd.com/NEW_PAGE_13.HTM&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  貓種圖鑑百科<span class="nt">&lt;/a&gt;&lt;/span&gt;&lt;span</span> <span class="na">lang=</span><span class="s">&quot;EN-US&quot;</span> <span class="na">style=</span><span class="s">&quot;FONT-SIZE: 16pt; COLOR: blue; FONT-FAMILY: 標楷體&quot;</span><span class="nt">&gt;</span><span class="ni">&amp;nbsp;</span>
</span><span class='line'>  <span class="nt">&lt;span</span> <span class="na">style=</span><span class="s">&quot;background: yellow&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">style=</span><span class="s">&quot;color: blue; text-decoration: underline&quot;</span> <span class="na">href=</span><span class="s">&quot;http://www.abcd.com/new_page_204.htm&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  寵物兔圖鑑百科<span class="nt">&lt;/a&gt;&lt;/span&gt;</span> <span class="nt">&lt;span</span> <span class="na">style=</span><span class="s">&quot;background: yellow&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">style=</span><span class="s">&quot;color: blue; text-decoration: underline&quot;</span> <span class="na">href=</span><span class="s">&quot;http://www.abcd.com/new_page_193.htm&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  錦鯉品種圖鑑百科<span class="nt">&lt;/a&gt;&lt;/span&gt;</span> <span class="nt">&lt;span</span> <span class="na">style=</span><span class="s">&quot;background: yellow&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  <span class="nt">&lt;a</span> <span class="na">style=</span><span class="s">&quot;color: blue; text-decoration: underline&quot;</span> <span class="na">href=</span><span class="s">&quot;http://www.abcd.com/&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>  回首頁<span class="nt">&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/b&gt;&lt;p</span> <span class="na">align=</span><span class="s">&quot;left&quot;</span><span class="nt">&gt;</span>原產地：比利時<span class="nt">&lt;p</span> <span class="na">align=</span><span class="s">&quot;left&quot;</span><span class="nt">&gt;</span>身高：20公分
</span><span class='line'>  <span class="nt">&lt;p</span> <span class="na">align=</span><span class="s">&quot;left&quot;</span><span class="nt">&gt;</span>體重：3.5公斤至4.5公斤。5.4公斤以下。<span class="nt">&lt;p</span> <span class="na">align=</span><span class="s">&quot;left&quot;</span><span class="nt">&gt;</span>歷史：本犬種是從17世紀時，由德國的篤賓犬和名利時的當地大改良而來，到了19世紀才成為現在的樣子。最初改良的目的是為捕鼠。<span class="nt">&lt;p</span> <span class="na">align=</span><span class="s">&quot;left&quot;</span><span class="nt">&gt;&lt;br&gt;</span>
</span><span class='line'>  特徵：可斷尾或斷耳，聰明乖巧<span class="nt">&lt;br&gt;</span>
</span><span class='line'>  ，十分渾圓。<span class="nt">&lt;p</span> <span class="na">align=</span><span class="s">&quot;left&quot;</span><span class="nt">&gt;</span>毛色毛質：分為粗毛與順毛二種，粗毛種的毛質粗，順毛則短有彈性，順毛種無黑色，主要顏色有暗褐、紅褐色，夾鬚與顎頭鬚的顏色較深。<span class="nt">&lt;p</span> <span class="na">align=</span><span class="s">&quot;left&quot;</span><span class="nt">&gt;&lt;br&gt;</span>
</span><span class='line'>  附註：本犬種的數量不多，    但卻有許多狗迷<span class="nt">&lt;/body&gt;&lt;/html&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>At first, I try to use <code>mechanize</code> to retrieve the particular text from dedicated area.  Howeve, due to the missing and messy tags, it didn&rsquo;t work by using simple selectors.  Therefore, I brutally fetch all text from the page.</p>

<p>Also, I found out there are several unsual whitespace characters within it, so I got rid of all white space characters which include line changing, tab, and space.</p>

<p>The code looks like this:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="n">content</span> <span class="o">=</span> <span class="n">page</span><span class="o">.</span><span class="n">parser</span><span class="o">.</span><span class="n">text</span><span class="o">.</span><span class="n">gsub</span><span class="p">(</span><span class="sr">/\s/</span><span class="p">,</span> <span class="s2">&quot;&quot;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Finally, I got a raw text data by repeating tests, and I need to deal with the sticky text.  Fortunately, the page was talking about the classification.  So I can easily to punctuate the content by using regular expressions, and add line changing before every categories.</p>

<p>This is the code for punctuating the text:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'>    <span class="n">kind_list</span> <span class="o">=</span> <span class="o">[</span><span class="s2">&quot;原產地&quot;</span><span class="p">,</span> <span class="s2">&quot;身高&quot;</span><span class="p">,</span> <span class="s2">&quot;體重&quot;</span><span class="p">,</span> <span class="s2">&quot;歷史&quot;</span><span class="p">,</span> <span class="s2">&quot;特徵&quot;</span><span class="p">,</span> <span class="s2">&quot;個性&quot;</span><span class="p">,</span> <span class="s2">&quot;毛色毛質&quot;</span><span class="p">,</span> <span class="s2">&quot;附註&quot;</span><span class="o">]</span>
</span><span class='line'>    <span class="n">kind_list</span><span class="o">.</span><span class="n">each</span> <span class="k">do</span> <span class="o">|</span><span class="n">kind</span><span class="o">|</span>
</span><span class='line'>      <span class="n">content</span> <span class="o">=</span> <span class="n">content</span><span class="o">.</span><span class="n">sub</span><span class="p">(</span><span class="n">kind</span><span class="p">,</span> <span class="s2">&quot;</span><span class="se">\n</span><span class="si">#{</span><span class="n">kind</span><span class="si">}</span><span class="s2">&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>And the result is here:</p>

<pre><code>名稱-比利時粗毛獵犬
原產地-比利時
身高-20公分
體重-3.5公斤至4.5公斤。5.4公斤以下。
歷史-本犬種是從17世紀時，由德國的篤賓犬和名利時的當地大改良而來，到了19世紀才成為現在的樣子。最初改良的目的是為捕鼠。
特徵-可斷尾或斷耳，聰明乖巧，十分渾圓。
個性-
毛色毛質-分為粗毛與順毛二種，粗毛種的毛質粗，順毛則短有彈性，順毛種無黑色，主要顏色有暗褐、紅褐色，夾鬚與顎頭鬚的顏色較深。
附註-本犬種的數量不多，但卻有許多狗迷
</code></pre>

<p>Regexp is so powerful.  I start to be addicted to it!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Regexp: Useful regexp resources]]></title>
    <link href="http://terratakashi.github.io/blog/2013/07/04/regexp-useful-regexp-resources/"/>
    <updated>2013-07-04T01:15:00+08:00</updated>
    <id>http://terratakashi.github.io/blog/2013/07/04/regexp-useful-regexp-resources</id>
    <content type="html"><![CDATA[<p>Here are some good references about regular expression:</p>

<ol>
<li><p><a href="http://rubular.com">Rubular</a>
 This is a great Ruby regular expression online editor which can let you test your regexp in a interactive way.</p></li>
<li><p><a href="http://regex.bastardsbook.com">The Bastards Book of Regular Expressions</a>
 A free guide to finding patterns in text by Dan Nguyen. There is also a <a href="http://ruby.bastardsbook.com/chapters/regexes/">brief version</a>.</p></li>
<li><p><a href="http://www.addedbytes.com/cheat-sheets/regular-expressions-cheat-sheet/">Regular Expressions Cheat Sheet (V2)</a>
 A great sheet for checking up common regexp quickly.</p></li>
<li><p><a href="http://www.regular-expressions.info">Regular-Expression.info</a>
 Lots of helpful documents for regexp.</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Regexp: How to deal with Chinese words]]></title>
    <link href="http://terratakashi.github.io/blog/2013/07/04/regexp-how-to-deal-with-chinese-words/"/>
    <updated>2013-07-04T00:32:00+08:00</updated>
    <id>http://terratakashi.github.io/blog/2013/07/04/regexp-how-to-deal-with-chinese-words</id>
    <content type="html"><![CDATA[<p>Today I&rsquo;m trying to use regexp to catch some special words.  For Chinses documents, it need to use <em>utf8</em> to present the words, so <code>/w</code> is useless in this case.</p>

<p>For this problem, we can have two choices to  slove it:</p>

<p>The first option, Chinese words distribute over <code>u4e00-u9fa5</code>, so we can use <code>[u4e00-u9fa5]</code> to catch them.<br/>
The other option is using &lsquo;[^x00-xff]&rsquo; to detect the word which doesn&rsquo;t belongs to <em>ASCII codes</em>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ruby: Multiple if statements and do-while loop.]]></title>
    <link href="http://terratakashi.github.io/blog/2013/06/12/ruby-multiple-if-statements-and-do-while-loop/"/>
    <updated>2013-06-12T21:36:00+08:00</updated>
    <id>http://terratakashi.github.io/blog/2013/06/12/ruby-multiple-if-statements-and-do-while-loop</id>
    <content type="html"><![CDATA[<p><code>if</code> is the most basic statement in programming.  However, sometimes we need to deal with more complex logical issue by mutilple <code>if</code>
statements.  In C/C++ programs, we usually use continuous <code>if</code> statements, but in Ruby, you should use a filter list and method <code>include?</code>
to implement it.</p>

<p>Here is a example in C/C++:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'>  <span class="k">if</span><span class="p">(</span> <span class="n">animal</span> <span class="o">!=</span> <span class="n">tiger</span> <span class="p">)</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span> <span class="n">animal</span> <span class="o">!=</span> <span class="n">lion</span> <span class="p">)</span>
</span><span class='line'>          <span class="k">if</span><span class="p">(</span> <span class="n">animal</span> <span class="o">!=</span> <span class="n">snake</span> <span class="p">)</span>
</span><span class='line'>              <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">&quot;It&#39;s a safe animal.&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>We can implement the same logical issue in Ruby by creating a list.</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="n">dangerous_animal</span> <span class="o">=</span> <span class="o">[</span> <span class="n">tiger</span><span class="p">,</span> <span class="n">lion</span><span class="p">,</span> <span class="n">snake</span> <span class="o">]</span>
</span><span class='line'>  <span class="nb">puts</span> <span class="s2">&quot;It&#39;s a safe animal.&quot;</span> <span class="k">if</span> <span class="o">!</span><span class="n">dangerous_animal</span><span class="o">.</span><span class="n">include?</span> <span class="p">(</span><span class="n">animal</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Therefore, it&rsquo;s more redable for creating a filter list first, and also the list is easy to modify.</p>

<p>In Ruby language, there is no <code>do-while</code> like loop.  So the other way to reach the same effect is use <code>loop-do</code> and a terminated condition
 to  implement that.</p>

<p>Here is a example in C/C++:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='c++'><span class='line'>  <span class="k">do</span><span class="p">{</span>
</span><span class='line'>      <span class="n">statement</span>
</span><span class='line'>  <span class="p">}</span><span class="k">while</span><span class="p">(</span> <span class="n">condition</span> <span class="p">)</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>And in Ruby&rsquo;s way:</p>

<figure class='code'> <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'> <span class="kp">loop</span> <span class="k">do</span>
</span><span class='line'>  <span class="n">statement</span>
</span><span class='line'>  <span class="k">break</span> <span class="k">if</span> <span class="n">statement</span>
</span><span class='line'> <span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>When I read some documents from Internet, they mentioned <code>do-while</code> loop is not necessary for Ruby.  Also, Matz doesn&rsquo;t want rubists to use this kind of logicals to solve problems.  In face, there are also potential problems for using <code>while</code> like loops.</p>
]]></content>
  </entry>
  
</feed>
