<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Regexp | Alex Chen's Blog]]></title>
  <link href="http://terratakashi.github.io/blog/categories/regexp/atom.xml" rel="self"/>
  <link href="http://terratakashi.github.io/"/>
  <updated>2013-07-04T01:47:08+08:00</updated>
  <id>http://terratakashi.github.io/</id>
  <author>
    <name><![CDATA[Alex Chen]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Regexp:Useful-regexp-resources]]></title>
    <link href="http://terratakashi.github.io/blog/2013/07/04/regexp-useful-regexp-resources/"/>
    <updated>2013-07-04T01:15:00+08:00</updated>
    <id>http://terratakashi.github.io/blog/2013/07/04/regexp-useful-regexp-resources</id>
    <content type="html"><![CDATA[<p>Here are some good references about regular expression:</p>

<ol>
<li><p><a href="http://rubular.com">Rubular</a>
 This is a great Ruby regular expression online editor which can let you test your regexp in a interactive way.</p></li>
<li><p><a href="http://regex.bastardsbook.com">The Bastards Book of Regular Expressions</a>
 A free guide to finding patterns in text by Dan Nguyen. There is also a <a href="http://ruby.bastardsbook.com/chapters/regexes/">brief version</a>.</p></li>
<li><p><a href="http://www.addedbytes.com/cheat-sheets/regular-expressions-cheat-sheet/">Regular Expressions Cheat Sheet (V2)</a>
 A great sheet for checking up common regexp quickly.</p></li>
<li><p><a href="http://www.regular-expressions.info">Regular-Expression.info</a>
 Lots of helpful documents for regexp.</p></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Regexp:How-to-deal-with-Chinese-words]]></title>
    <link href="http://terratakashi.github.io/blog/2013/07/04/regexp-how-to-deal-with-chinese-words/"/>
    <updated>2013-07-04T00:32:00+08:00</updated>
    <id>http://terratakashi.github.io/blog/2013/07/04/regexp-how-to-deal-with-chinese-words</id>
    <content type="html"><![CDATA[<p>Today I&rsquo;m trying to use regexp to catch some special words.  For Chinses documents, it need to use <em>utf8</em> to present the words, so <code>/w</code> is useless in this case.</p>

<p>For this problem, we can have two choices to  slove it:</p>

<p>The first option, Chinese words distribute over <code>u4e00-u9fa5</code>, so we can use <code>[u4e00-u9fa5]</code> to catch them.<br/>
The other option is using &lsquo;[^x00-xff]&rsquo; to detect the word which doesn&rsquo;t belongs to <em>ASCII codes</em>.</p>
]]></content>
  </entry>
  
</feed>
